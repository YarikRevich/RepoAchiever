/*
 * OpenAPI document of RepoAchiever API Server
 * RepoAchiever API Server Open API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.repoachiever.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.repoachiever.model.HealthCheckStatus;
import com.repoachiever.model.HealthCheckUnit;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * HealthCheckResult
 */
@JsonPropertyOrder({
  HealthCheckResult.JSON_PROPERTY_STATUS,
  HealthCheckResult.JSON_PROPERTY_CHECKS
})
@lombok.Data @lombok.AllArgsConstructor(staticName = "of")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-14T13:47:18.147711+02:00[Europe/Warsaw]")
public class HealthCheckResult {
  public static final String JSON_PROPERTY_STATUS = "status";
  private HealthCheckStatus status;

  public static final String JSON_PROPERTY_CHECKS = "checks";
  private List<HealthCheckUnit> checks = new ArrayList<>();

  public HealthCheckResult() {
  }

  public HealthCheckResult status(HealthCheckStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public HealthCheckStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(HealthCheckStatus status) {
    this.status = status;
  }


  public HealthCheckResult checks(List<HealthCheckUnit> checks) {
    
    this.checks = checks;
    return this;
  }

  public HealthCheckResult addChecksItem(HealthCheckUnit checksItem) {
    this.checks.add(checksItem);
    return this;
  }

   /**
   * Get checks
   * @return checks
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHECKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<HealthCheckUnit> getChecks() {
    return checks;
  }


  @JsonProperty(JSON_PROPERTY_CHECKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChecks(List<HealthCheckUnit> checks) {
    this.checks = checks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthCheckResult healthCheckResult = (HealthCheckResult) o;
    return Objects.equals(this.status, healthCheckResult.status) &&
        Objects.equals(this.checks, healthCheckResult.checks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, checks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthCheckResult {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    checks: ").append(toIndentedString(checks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

