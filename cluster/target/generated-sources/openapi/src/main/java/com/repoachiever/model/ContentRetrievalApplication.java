/*
 * OpenAPI document of RepoAchiever API Server
 * RepoAchiever API Server Open API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.repoachiever.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.repoachiever.model.CredentialsFieldsFull;
import com.repoachiever.model.Provider;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ContentRetrievalApplication
 */
@JsonPropertyOrder({
  ContentRetrievalApplication.JSON_PROPERTY_PROVIDER,
  ContentRetrievalApplication.JSON_PROPERTY_CREDENTIALS
})
@lombok.Data @lombok.AllArgsConstructor(staticName = "of")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-14T13:47:18.147711+02:00[Europe/Warsaw]")
public class ContentRetrievalApplication {
  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private Provider provider;

  public static final String JSON_PROPERTY_CREDENTIALS = "credentials";
  private CredentialsFieldsFull credentials;

  public ContentRetrievalApplication() {
  }

  public ContentRetrievalApplication provider(Provider provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Provider getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProvider(Provider provider) {
    this.provider = provider;
  }


  public ContentRetrievalApplication credentials(CredentialsFieldsFull credentials) {
    
    this.credentials = credentials;
    return this;
  }

   /**
   * Get credentials
   * @return credentials
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CredentialsFieldsFull getCredentials() {
    return credentials;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredentials(CredentialsFieldsFull credentials) {
    this.credentials = credentials;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentRetrievalApplication contentRetrievalApplication = (ContentRetrievalApplication) o;
    return Objects.equals(this.provider, contentRetrievalApplication.provider) &&
        Objects.equals(this.credentials, contentRetrievalApplication.credentials);
  }

  @Override
  public int hashCode() {
    return Objects.hash(provider, credentials);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentRetrievalApplication {\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

