openapi: 3.0.1
info:
  description: RepoAchiever API Server Open API documentation
  title: OpenAPI document of RepoAchiever API Server
  version: "1.0"
servers:
- url: /
tags:
- description: Contains all endpoints related to operations on processed content.
  name: ContentResource
- description: Contains all endpoints related to operations on external resources
    been scheduled.
  name: RegistratorResource
- description: Contains all endpoints related to both data validation and its further
    retrieval.
  name: ValidationResource
- description: Contains all endpoints related to general info of API Server.
  name: InfoResource
- description: Contains all endpoints related to general API Server health information.
  name: HealthResource
paths:
  /v1/content:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResult'
          description: A list of all available content at the registered locations
      tags:
      - ContentResource
      x-accepts: application/json
      x-tags:
      - tag: ContentResource
  /v1/content/download:
    get:
      parameters:
      - description: The identificator of content to be downloaded
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A content was successfully retrieved
      tags:
      - ContentResource
      x-accepts: application/octet-stream
      x-tags:
      - tag: ContentResource
  /v1/registrator/location:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationRegistrationApplication'
        description: The identificator of the location to perform registration
        required: true
      responses:
        "200":
          description: Location has been successfully created
      tags:
      - RegistratorResource
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: RegistratorResource
  /v1/validation/secrets:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationSecretsApplication'
        description: Checks if the given secrets are valid
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationSecretsApplicationResult'
          description: Given secrets are confirmed to be valid
        "400":
          description: Given secrets application contains incorrect data
      tags:
      - ValidationResource
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: ValidationResource
  /v1/info/version:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfoResult'
          description: General information about running API Server
      tags:
      - InfoResource
      x-accepts: application/json
      x-tags:
      - tag: InfoResource
  /v1/info/cluster:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterInfoResult'
          description: General information about running clusters
      tags:
      - InfoResource
      x-accepts: application/json
      x-tags:
      - tag: InfoResource
  /v1/info/telemetry:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: A set of Prometheus samples used by Grafana instance
      tags:
      - InfoResource
      x-accepts: text/plain
      x-tags:
      - tag: InfoResource
  /v1/health:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResult'
          description: General health information about running API Server
      tags:
      - HealthResource
      x-accepts: application/json
      x-tags:
      - tag: HealthResource
  /v1/readiness:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadinessCheckApplication'
        description: Check if API Server is ready to serve for the given user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessCheckResult'
          description: General health information about running API Server
      tags:
      - HealthResource
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: HealthResource
components:
  schemas:
    ContentResult:
      example:
        test: "{}"
        provider: null
        credentials:
          internal:
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          external: null
      properties:
        test:
          type: object
        provider:
          $ref: '#/components/schemas/Provider'
        credentials:
          $ref: '#/components/schemas/CredentialsFieldsFull'
    LocationRegistrationApplication:
      example:
        provider: null
        credentials:
          internal:
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          external: null
        name: name
      properties:
        name:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
        credentials:
          $ref: '#/components/schemas/CredentialsFieldsFull'
      required:
      - credentials
      - name
      - provider
    Provider:
      enum:
      - git-local
      - git-github
      type: string
    ValidationSecretsApplication:
      example:
        provider: null
        credentials: null
      properties:
        provider:
          $ref: '#/components/schemas/Provider'
        credentials:
          $ref: '#/components/schemas/CredentialsFieldsExternal'
      required:
      - provider
    CredentialsFieldsFull:
      example:
        internal:
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        external: null
      properties:
        internal:
          $ref: '#/components/schemas/CredentialsFieldsInternal'
        external:
          $ref: '#/components/schemas/CredentialsFieldsExternal'
    CredentialsFieldsInternal:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
    CredentialsFieldsExternal:
      anyOf:
      - $ref: '#/components/schemas/GitGitHubCredentials'
    GitGitHubCredentials:
      properties:
        token:
          type: string
      required:
      - token
    ValidationSecretsApplicationResult:
      example:
        valid: true
      properties:
        valid:
          type: boolean
      required:
      - valid
    VersionInfoResult:
      example:
        externalApi:
          version: version
          hash: hash
      properties:
        externalApi:
          $ref: '#/components/schemas/VersionExternalApiInfoResult'
    VersionExternalApiInfoResult:
      example:
        version: version
        hash: hash
      properties:
        version:
          type: string
        hash:
          type: string
      required:
      - hash
      - version
    ClusterInfoResult:
      items:
        $ref: '#/components/schemas/ClusterInfoUnit'
      type: array
    ClusterInfoUnit:
      example:
        name: name
        health: true
        workers: 0
      properties:
        name:
          type: string
        health:
          type: boolean
        workers:
          type: integer
      required:
      - name
    HealthCheckResult:
      example:
        checks:
        - name: name
          status: null
        - name: name
          status: null
        status: null
      properties:
        status:
          $ref: '#/components/schemas/HealthCheckStatus'
        checks:
          items:
            $ref: '#/components/schemas/HealthCheckUnit'
          type: array
      required:
      - checks
      - status
    HealthCheckUnit:
      example:
        name: name
        status: null
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/HealthCheckStatus'
      required:
      - name
      - status
    HealthCheckStatus:
      enum:
      - UP
      - DOWN
      type: string
    ReadinessCheckApplication:
      example:
        test: "{}"
      properties:
        test:
          type: object
    ReadinessCheckResult:
      example:
        data: "{}"
        name: name
        status: null
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/ReadinessCheckStatus'
        data:
          type: object
      required:
      - data
      - name
      - status
    ReadinessCheckUnit:
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/ReadinessCheckStatus'
      required:
      - name
      - status
    ReadinessCheckStatus:
      enum:
      - UP
      - DOWN
      type: string
